{"version":3,"sources":["Square.tsx","Board.tsx","Game.tsx","index.tsx"],"names":["Square","props","className","onClick","value","Board","i","key","this","squares","e","board","squareCount","row","cols","col","push","renderSquare","createBoard","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","moveNo","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","Math","floor","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f70e8c3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\ninterface SquareProps {\n\tvalue: string;\n\tonClick: (ev: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Square: React.FC<SquareProps> = props => {\n\treturn (\n\t\t<button className=\"square\" onClick={props.onClick}>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n};\n\nexport default Square;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport Square from \"./Square\";\n\ntype BoardProp = {\n\tsquares: Array<string>;\n\tonClick: (ev: React.MouseEvent<HTMLButtonElement>, i: number) => void;\n};\n\ntype BoardState = {\n\txIsNext: boolean;\n};\n\nclass Board extends React.Component<BoardProp, BoardState> {\n\trenderSquare(i: number) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tkey={i}\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\tonClick={e => this.props.onClick(e, i)}\n\t\t\t/>\n\t\t);\n\t}\n\tcreateBoard() {\n\t\tlet board = [];\n\t\tlet squareCount = 1;\n\t\tfor (let row = 0; row < 3; row++) {\n\t\t\tlet cols = [];\n\t\t\tfor (let col = 0; col < 3; col++) {\n\t\t\t\tcols.push(this.renderSquare(squareCount));\n\t\t\t\tsquareCount++;\n\t\t\t}\n\t\t\tboard.push(\n\t\t\t\t<div className=\"board-row\" key={row}>\n\t\t\t\t\t{cols}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn board;\n\t}\n\n\trender() {\n\t\treturn <div>{this.createBoard()}</div>;\n\t}\n}\n\nexport default Board;\n","import React from \"react\";\nimport \"./index.css\";\nimport Board from \"./Board\";\n\ntype History = {\n\tsquares: Array<string>;\n\tmoveNo: number;\n};\n\ntype GameState = {\n\thistory: Array<History>;\n\txIsNext: boolean;\n\tstepNumber: number;\n};\n\ntype GameProps = {};\n\nclass Game extends React.Component<GameProps, GameState> {\n\tconstructor(props: GameProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t\t\tmoveNo: 0\n\t\t\t\t}\n\t\t\t],\n\t\t\txIsNext: true,\n\t\t\tstepNumber: 0\n\t\t};\n\t}\n\n\thandleClick(i: number) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares,\n\t\t\t\t\tmoveNo: i\n\t\t\t\t}\n\t\t\t]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext\n\t\t});\n\t}\n\n\tjumpTo(step: number) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 === 0\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ? \"Go to move #\" + move : \"Go to game start\";\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => this.jumpTo(move)}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tthis.state.stepNumber === move\n\t\t\t\t\t\t\t\t? \"selected-move\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{desc} - ({Math.floor(history[move].moveNo / 3)},{\" \"}\n\t\t\t\t\t\t{history[move].moveNo % 3})\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = \"Winner is \" + winner;\n\t\t} else {\n\t\t\tstatus = \"Next player is \" + (this.state.xIsNext ? \"X\" : \"O\");\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={(e, i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction calculateWinner(squares: Array<string>) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6]\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (\n\t\t\tsquares[a] &&\n\t\t\tsquares[a] === squares[b] &&\n\t\t\tsquares[a] === squares[c]\n\t\t) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}