{"version":3,"sources":["Square.tsx","Board.tsx","Game.tsx","index.tsx"],"names":["Square","props","className","onClick","value","Board","i","this","squares","e","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","moveNo","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","Math","floor","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ae1020b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\ninterface SquareProps {\n\tvalue: string;\n\tonClick: (ev: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Square: React.FC<SquareProps> = props => {\n\treturn (\n\t\t<button className=\"square\" onClick={props.onClick}>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n};\n\nexport default Square;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport Square from \"./Square\";\n\ntype BoardProp = {\n\tsquares: Array<string>;\n\tonClick: (ev: React.MouseEvent<HTMLButtonElement>, i: number) => void;\n};\n\ntype BoardState = {\n\txIsNext: boolean;\n};\n\nclass Board extends React.Component<BoardProp, BoardState> {\n\trenderSquare(i: number) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\tonClick={e => this.props.onClick(e, i)}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Board;\n","import React from \"react\";\nimport \"./index.css\";\nimport Board from \"./Board\";\n\ntype History = {\n\tsquares: Array<string>;\n\tmoveNo: number;\n};\n\ntype GameState = {\n\thistory: Array<History>;\n\txIsNext: boolean;\n\tstepNumber: number;\n};\n\ntype GameProps = {};\n\nclass Game extends React.Component<GameProps, GameState> {\n\tconstructor(props: GameProps) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t\t\tmoveNo: 0\n\t\t\t\t}\n\t\t\t],\n\t\t\txIsNext: true,\n\t\t\tstepNumber: 0\n\t\t};\n\t}\n\n\thandleClick(i: number) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares,\n\t\t\t\t\tmoveNo: i\n\t\t\t\t}\n\t\t\t]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext\n\t\t});\n\t}\n\n\tjumpTo(step: number) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 === 0\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ? \"Go to move #\" + move : \"Go to game start\";\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => this.jumpTo(move)}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tthis.state.stepNumber === move\n\t\t\t\t\t\t\t\t? \"selected-move\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{desc} - ({Math.floor(history[move].moveNo / 3)},{\" \"}\n\t\t\t\t\t\t{history[move].moveNo % 3})\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = \"Winner is \" + winner;\n\t\t} else {\n\t\t\tstatus = \"Next player is \" + (this.state.xIsNext ? \"X\" : \"O\");\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={(e, i) => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{status}</div>\n\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction calculateWinner(squares: Array<string>) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6]\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (\n\t\t\tsquares[a] &&\n\t\t\tsquares[a] === squares[b] &&\n\t\t\tsquares[a] === squares[c]\n\t\t) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn null;\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}